#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed May 23 18:48:34 2018

@author: dilic
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
import csv

scaler = MinMaxScaler()

WEEK0 = 2
WEEK1 = 3
WEEK2 = 4
WEEK3 = 5

bldtyp = ['0-', '0+', 'A-', 'A+', 'B-', 'B+', 'AB-', 'AB+']

bldtypdict = {
    '0-': 0,
    '0+': 1,
    'A-': 2,
    'A+': 3,
    'B-': 4,
    'B+': 5,
    'AB-': 6,
    'AB+': 7        
}

minsup = np.array([38, 115, 46, 100, 38, 23, 8, 16])
optsup = np.array([58, 177, 71, 155, 60, 36, 13, 26])
maxsup = np.array([78, 240, 96, 210, 82, 50, 18, 36])
wekcon = np.array([35, 105, 42, 91, 35, 21, 7, 14])

cursup = np.array([50, 130, 60, 150, 50, 30, 8, 20])

def loss(x, i):
    r = maxsup[i] - minsup[i]

    if x <= minsup[i]:
        return (200 / r) * (minsup[i] - x) + 35
    elif x > minsup[i] and x <= (r / 3 + minsup[i]):
        return (100 / r) * (minsup[i] + r / 3 - x)
    elif x > (r / 3 + minsup[i]) and x <= (2 * r / 3 + minsup[i]):
        return 0
    elif x > (2 * r / 3 + minsup[i]) and x <= maxsup[i]:
        return (100 / r) * (x - 2 * r / 3 - minsup[i])
    else:
        return (200 / r) * (x - maxsup[i]) + 35

def get_new_data(data, days_passed):
    new_data = []
    
    data['freq_norm'] = data['frequency']
    data['dist_norm'] = np.exp(data['distance'])
    
    data[['freq_norm', 'dist_norm']] = scaler.fit_transform(data[['frequency', 'distance']])
    data['freq_norm'] = abs(1 - data['freq_norm'])
    
    for index, row in data.iterrows():
        okay = 0
        if row['sex'] == 'M' and (row['last_donation'] + days_passed) >= 90:
            okay = 1
        elif row['sex'] == 'Z' and (row['last_donation'] + days_passed) >= 120:
            okay = 1
            
        if okay:
            row['goodness'] = np.sqrt(row['dist_norm'] ** 2 +  row['freq_norm'] ** 2)
            new_data.append(row)


    return pd.DataFrame(new_data)

data = pd.read_csv('donors.csv')

def write_week(week_no, people_called):
    with open('week{}.csv'.format(week_no), 'w') as csvfile:
        testwriter = csv.writer(csvfile, delimiter=',', quotechar='|', quoting=csv.QUOTE_MINIMAL)
        testwriter.writerow(people_called)
        
people_responded = []
def run_week(newsup, weeknum):
    available_people = get_new_data(data, weeknum*7)
    available_people_sorted = available_people.sort_values(['goodness'], ascending=[True])
    
    
    
    people_called = []
    
    for index, row in available_people_sorted.iterrows():
        bldid = bldtypdict[row['blood_group']]
        if cursup[bldid] < (weeknum + 1) * (optsup[bldid] + wekcon[bldid]):
            cursup[bldid] += 1
    
            people_called.append(row['id'])
            
    write_week(weeknum, people_called)
 
cursup -= wekcon    
run_week(cursup, 0)
people_responded = [40437,40438,40447,40450,40460,40466,40470,40486,40504,40512,40523,40526,40535,40549,40563,40594,40614,40615,40616,40657,40658,40661,40664,40675,40683,40686,40692,40700,40703,40721,40726,40747,40755,40758,40760,40765,40775,40800,40812,40815,40827,40831,40839,40843,40844,40862,40866,40881,40884,40887,40888,40894,40900,40924,40927,40933,40934,40937,40942,40956,40958,41020,41030,41049,41057,41079,41086,41105,41109,41117,41119,41129,41136,41138,41142,41164,41174,41183,41185,41195,41215,41220,41231,41242,41264,41265,41276,41304,41310,41368,41370,41378,41382,41398,41403,41437,41447,41455,41465,41472,41481,41495,41522,41526,41528,41540,41564,41569,41614,41623,41645,41648,41650,41656,41663,41673,41682,41689,41698,41708,41713,41720,41721,41747,41750,41755,41764,41774,41778,41779,41788,41790,41792,41801,41803,41804,41807,41810,41842,41844,41854,41865,41872,41886,41891,41911,41912,41925,41926,41951,41953,41961,41967,41993,41994,42013,42023,42057,42082,42086,42104,42114,42126,42159,42160,42182,42204,42207,42222,42230,42244,42247,42253,42254,42260,42284,42285,42289,42300,42301,42308,42313,42315,42316,42320,42333,42340,42341,42342,42345,42348,42369,42370,42376,42395,42397,42428,42441,42449,42450,42462,42466,42469,42515,42530,42540,42546,42578,42590,42596,42600,42605,42607,42608,42619,42620,42628,42630,42631,42633,42638,42654,42676,42687,42701,42711,42725,42727,42736,42747,42777,42779,42784,42797,42804,42808,42809,42830,42871,42891,42892,42910,42924,42925,42939,42943,42951,42979,42981,42998,43007,43011,43013,43024,43025,43046,43058,43063,43075,43078,43085,43098,43105,43106,43111,43124,43130,43132,43142,43145,43256,43276,43278,43305,43322,43325,43337,43353,43368,43378,43382,43383,43389,43402,43419,43433,43455,43456,43467,43471,43491,43501,43511,43533,43538,43539,43540,43545,43572,43585,43589,43599,43604,43611,43625,43635,43652,43654,43657,43664,43671,43672,43690,43701,43704,43708,43718,43738,43740,43755,43762,43787,43788,43792,43793,43804,43813,43836,43852,43858,43870,43878,43888,43893,43913,43916,43930,43937,43945,43949,43967,43971,43973,43978,43980,43990,43994,43996,43998,44023,44042,44045,44049,44056,44065,44080,44082,44084,44099,44106,44128,44129,44143,44149,44173,44174,44176,44186,44190,44201,44208,44230,44236,44250,44263,44264,44295,44297,44298,44299,44306,44307,44309,44337,44370,44371,44376,44389,44392,44397,44408,44409,44423,44435,44436,44437,44444,44452,44468,44472,44492,44504,44523,44535,44556,44557,44562,44577,44593,44635,44643,44676,44690,44696,44709,44712,44733,44754,44763,44778,44810,44818,44820,44823,44826,44827,44834,44836,44838,44846,44848,44856,44858,44874,44878,44886,44903,44911,44919,44933]
for person in people_responded:
    data.loc[data['id'] == person, 'last_donation'] = 0

cursup = [52,167,69,170,62,35,12,21]
cursup -= wekcon
run_week(cursup, 1)
people_responded = [40437,40438,40441,40447,40450,40466,40474,40486,40505,40508,40512,40523,40549,40563,40594,40614,40616,40644,40657,40658,40661,40664,40668,40669,40686,40700,40703,40716,40726,40729,40747,40751,40755,40758,40765,40770,40775,40778,40812,40827,40830,40831,40839,40843,40844,40862,40881,40884,40887,40888,40894,40900,40922,40927,40934,40942,40945,40956,40958,41015,41018,41020,41030,41049,41057,41064,41079,41086,41087,41097,41105,41119,41136,41138,41142,41164,41174,41183,41185,41188,41195,41206,41215,41220,41231,41242,41302,41368,41370,41378,41382,41394,41408,41409,41414,41417,41437,41444,41455,41463,41472,41481,41495,41515,41522,41526,41532,41539,41540,41564,41569,41574,41576,41577,41594,41621,41623,41624,41648,41650,41656,41663,41689,41698,41708,41713,41721,41747,41750,41764,41778,41788,41790,41801,41803,41804,41807,41810,41818,41828,41842,41844,41872,41886,41891,41930,41940,41943,41951,41953,41961,41994,42023,42036,42082,42140,42143,42145,42147,42159,42182,42196,42207,42244,42247,42253,42254,42260,42275,42284,42285,42300,42301,42308,42313,42315,42316,42320,42330,42333,42340,42341,42345,42350,42369,42376,42380,42383,42384,42395,42397,42428,42438,42441,42450,42462,42466,42469,42471,42489,42498,42515,42530,42537,42538,42540,42546,42578,42590,42596,42605,42607,42619,42620,42628,42630,42633,42640,42676,42687,42701,42711,42725,42727,42736,42747,42750,42784,42795,42804,42808,42823,42830,42860,42863,42871,42891,42892,42904,42913,42925,42943,42951,42972,42981,42991,43007,43011,43013,43018,43025,43043,43046,43058,43079,43093,43105,43106,43111,43124,43125,43130,43142,43155,43216,43231,43237,43239,43250,43252,43256,43276,43278,43298,43305,43322,43334,43337,43339,43368,43378,43382,43383,43389,43413,43419,43433,43456,43467,43471,43490,43491,43501,43511,43533,43538,43539,43545,43566,43572,43599,43604,43605,43625,43630,43635,43652,43654,43657,43664,43671,43672,43687,43694,43703,43704,43718,43740,43768,43771,43784,43787,43792,43813,43836,43853,43870,43878,43888,43893,43913,43930,43945,43949,43967,43973,43978,43990,43994,43996,43998,44042,44045,44049,44065,44077,44084,44106,44122,44128,44143,44145,44149,44180,44186,44190,44230,44250,44265,44278,44287,44295,44297,44298,44306,44311,44318,44337,44363,44370,44390,44392,44397,44408,44409,44423,44435,44436,44437,44444,44468,44472,44504,44533,44538,44557,44562,44578,44593,44635,44643,44689,44690,44696,44709,44712,44733,44763,44768,44778,44782,44810,44818,44820,44827,44833,44834,44846,44848,44856,44867,44874,44878,44888,44903,44911,44919,44925,44933,44935]
for person in people_responded:
    data.loc[data['id'] == person, 'last_donation'] = 0

cursup = [51,153,68,156,45,32,12,24]
cursup -= wekcon  
run_week(cursup, 2)
people_responded = [40482,40497,40555,40570,40581,40627,40638,40644,40653,40660,40666,40693,40706,40712,40746,40767,40777,40778,40789,40811,40817,40825,40848,40865,40917,40960,40962,40995,41007,41048,41064,41076,41122,41140,41205,41219,41235,41246,41248,41259,41260,41286,41341,41383,41392,41418,41432,41450,41506,41511,41515,41517,41558,41563,41566,41568,41588,41632,41634,41636,41650,41661,41671,41681,41732,41745,41759,41768,41790,41817,41889,41920,41938,41966,41976,41984,41985,42018,42031,42046,42050,42056,42061,42085,42086,42088,42089,42093,42117,42126,42148,42149,42159,42166,42167,42180,42216,42236,42314,42337,42347,42362,42380,42384,42388,42398,42404,42408,42410,42423,42461,42470,42514,42518,42519,42584,42589,42622,42635,42644,42654,42674,42689,42694,42704,42734,42772,42773,42791,42794,42827,42842,42844,42917,42919,42922,42936,42945,42956,42971,42996,42999,43096,43125,43133,43155,43174,43192,43249,43252,43268,43274,43275,43306,43326,43332,43339,43358,43360,43361,43400,43414,43422,43441,43444,43466,43475,43481,43490,43540,43553,43566,43584,43588,43591,43592,43611,43630,43643,43669,43670,43679,43688,43750,43761,43766,43771,43778,43838,43841,43852,43860,43866,43893,43915,43918,43924,43932,43933,43935,43940,44005,44010,44027,44030,44053,44065,44084,44093,44096,44116,44123,44141,44145,44154,44165,44190,44208,44210,44213,44220,44248,44286,44297,44298,44301,44322,44331,44333,44393,44423,44430,44450,44477,44559,44561,44571,44685,44687,44694,44731,44742,44801,44831,44836,44852,44868,44873,44889,44894,44916]
for person in people_responded:
    data.loc[data['id'] == person, 'last_donation'] = 0

cursup = [40,130,55,122,36,29,12,18]
cursup -= wekcon
run_week(cursup, 3)

    

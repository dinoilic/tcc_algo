#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed May 23 18:48:34 2018

@author: dilic
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
import csv

scaler = MinMaxScaler()

bldtyp = ['0-', '0+', 'A-', 'A+', 'B-', 'B+', 'AB-', 'AB+']

bldtypdict = {
    '0-': 0,
    '0+': 1,
    'A-': 2,
    'A+': 3,
    'B-': 4,
    'B+': 5,
    'AB-': 6,
    'AB+': 7        
}

minsup = np.array([38, 115, 46, 100, 38, 23, 8, 16])
optsup = np.array([58, 177, 71, 155, 60, 36, 13, 26])
maxsup = np.array([78, 240, 96, 210, 82, 50, 18, 36])
wekcon = np.array([35, 105, 42, 91, 35, 21, 7, 14])

cursup = np.array([50, 130, 60, 150, 50, 30, 8, 20])

def loss(x, i):
    r = maxsup[i] - minsup[i]

    if x <= minsup[i]:
        return (200 / r) * (minsup[i] - x) + 35
    elif x > minsup[i] and x <= (r / 3 + minsup[i]):
        return (100 / r) * (minsup[i] + r / 3 - x)
    elif x > (r / 3 + minsup[i]) and x <= (2 * r / 3 + minsup[i]):
        return 0
    elif x > (2 * r / 3 + minsup[i]) and x <= maxsup[i]:
        return (100 / r) * (x - 2 * r / 3 - minsup[i])
    else:
        return (200 / r) * (x - maxsup[i]) + 35

def get_new_data(data, days_passed):
    new_data = []
    
    data['freq_norm'] = data['frequency']
    data['dist_norm'] = np.exp(data['distance'])
    
    data[['freq_norm', 'dist_norm']] = scaler.fit_transform(data[['frequency', 'distance']])
    data['freq_norm'] = abs(1 - data['freq_norm'])
    
    for index, row in data.iterrows():
        okay = 0
        if row['sex'] == 'M' and (row['last_donation'] + days_passed) >= 90:
            okay = 1
        elif row['sex'] == 'Z' and (row['last_donation'] + days_passed) >= 120:
            okay = 1
            
        if okay:
            row['goodness'] = np.sqrt(row['dist_norm'] ** 2 +  row['freq_norm'] ** 2)
            new_data.append(row)


    return pd.DataFrame(new_data)

data = pd.read_csv('donors.csv')

def write_week(week_no, people_called):
    with open('week{}.csv'.format(week_no), 'w') as csvfile:
        testwriter = csv.writer(csvfile, delimiter=',', quotechar='|', quoting=csv.QUOTE_MINIMAL)
        testwriter.writerow(people_called)

# Week 0
available_people = get_new_data(data, 0)
available_people_sorted = available_people.sort_values(['goodness'], ascending=[True])

# plt.scatter(available_people_sorted[1:1000]['frequency'], available_people_sorted[1:1000]['distance'])

cursup -= wekcon

people_called = []

for index, row in available_people_sorted.iterrows():
    bldid = bldtypdict[row['blood_group']]
    if cursup[bldid] < np.ceil(1.5 * optsup[bldid]):
        cursup[bldid] += 1

        people_called.append(row['id'])
        
write_week(0, people_called)
    
people_responded = [40437,40447,40450,40463,40466,40470,40474,40486,40504,40505,40508,40512,40523,40526,40549,40558,40563,40594,40596,40614,40626,40644,40657,40661,40668,40675,40683,40686,40687,40692,40726,40727,40729,40747,40751,40758,40760,40765,40770,40775,40778,40812,40827,40831,40839,40843,40844,40862,40866,40880,40881,40884,40887,40894,40905,40922,40933,40934,40937,40942,40945,40956,40965,41003,41020,41030,41049,41057,41079,41086,41093,41105,41109,41111,41119,41129,41136,41142,41174,41183,41185,41194,41195,41215,41220,41231,41238,41251,41264,41301,41302,41310,41368,41370,41373,41378,41382,41403,41408,41409,41417,41437,41444,41447,41455,41463,41465,41472,41481,41495,41526,41528,41540,41564,41569,41576,41621,41623,41624,41637,41648,41652,41656,41663,41673,41689,41707,41708,41709,41713,41747,41750,41755,41774,41788,41801,41803,41807,41818,41841,41842,41844,41854,41864,41872,41886,41891,41911,41912,41915,41926,41927,41930,41938,41943,41951,41953,41961,41965,41967,41994,42013,42066,42082,42086,42114,42127,42140,42145,42147,42160,42166,42182,42196,42205,42207,42222,42230,42232,42244,42247,42253,42254,42260,42275,42285,42286,42289,42300,42301,42308,42313,42315,42316,42320,42333,42340,42345,42348,42369,42370,42376,42380,42384,42395,42428,42439,42441,42449,42450,42459,42462,42466,42469,42503,42515,42516,42530,42536,42538,42540,42590,42596,42600,42605,42607,42608,42619,42620,42628,42630,42633,42676,42687,42699,42711,42725,42736,42745,42747,42750,42779,42784,42793,42797,42804,42808,42810,42823,42860,42861,42863,42866,42871,42891,42892,42904,42925,42951,42972,42979,42981,43007,43011,43013,43024,43025,43043,43046,43058,43078,43085,43093,43098,43106,43111,43124,43125,43130,43132,43230,43231,43249,43250,43256,43263,43270,43276,43297,43322,43334,43337,43368,43378,43383,43387,43389,43394,43413,43419,43433,43455,43456,43471,43491,43501,43511,43517,43533,43536,43545,43551,43566,43585,43599,43605,43607,43611,43625,43626,43657,43664,43671,43672,43681,43701,43704,43708,43718,43738,43740,43768,43771,43787,43792,43793,43799,43813,43817,43870,43878,43888,43893,43913,43922,43930,43945,43949,43967,43971,43973,43978,43990,43994,43996,43998,44038,44042,44045,44049,44080,44099,44106,44122,44123,44128,44129,44143,44149,44173,44175,44176,44180,44186,44190,44230,44246,44250,44258,44278,44280,44295,44298,44306,44307,44309,44311,44333,44337,44370,44371,44390,44392,44397,44408,44409,44423,44435,44436,44437,44444,44468,44520,44521,44523,44533,44557,44562,44577,44578,44599,44635,44643,44676,44689,44690,44694,44709,44712,44733,44743,44754,44763,44778,44805,44810,44820,44823,44826,44827,44833,44834,44838,44846,44848,44856,44867,44874,44878,44903,44911,44925,44933]
for person in people_responded:
    data.loc[data['id'] == person, 'last_donation'] = 0

# Week 1

available_people = get_new_data(data, 7)
available_people_sorted = available_people.sort_values(['goodness'], ascending=[True])

cursup = [43,122,53,128,43,29,9,21]

cursup -= wekcon

people_called = []

for index, row in available_people_sorted.iterrows():
    bldid = bldtypdict[row['blood_group']]
    if cursup[bldid] < np.ceil(1.5 * optsup[bldid]): 
        cursup[bldid] += 1

        people_called.append(row['id'])
        
write_week(1, people_called)
    
people_responded = [40438,40441,40449,40451,40469,40488,40497,40532,40556,40600,40616,40638,40658,40695,40696,40719,40721,40725,40733,40779,40800,40809,40815,40824,40838,40860,40873,40875,40886,40897,40900,40924,40927,40929,40936,40944,40949,40958,40997,41002,41007,41033,41056,41067,41092,41095,41110,41164,41188,41235,41239,41242,41246,41260,41276,41279,41297,41304,41341,41354,41374,41381,41383,41387,41392,41394,41398,41415,41418,41439,41448,41460,41488,41504,41522,41614,41618,41622,41633,41642,41645,41690,41710,41721,41723,41745,41752,41778,41779,41790,41792,41810,41816,41828,41829,41853,41857,41896,41906,41909,41919,41939,41941,41987,42010,42023,42036,42050,42059,42085,42104,42108,42110,42132,42143,42159,42167,42180,42191,42193,42198,42240,42243,42248,42250,42271,42272,42291,42324,42330,42338,42350,42352,42360,42365,42375,42426,42445,42457,42461,42483,42514,42537,42545,42546,42578,42582,42585,42618,42635,42638,42640,42644,42645,42662,42685,42690,42703,42731,42777,42809,42827,42832,42843,42847,42887,42910,42913,42919,42939,42943,42944,42952,42959,42991,42998,43036,43075,43101,43105,43162,43168,43183,43212,43216,43219,43237,43239,43253,43260,43278,43298,43307,43317,43320,43327,43341,43353,43362,43375,43395,43402,43445,43454,43467,43475,43476,43481,43489,43504,43532,43538,43539,43540,43563,43570,43589,43596,43604,43623,43630,43635,43669,43670,43687,43755,43795,43800,43804,43810,43843,43845,43852,43853,43858,43910,43918,43946,43997,44013,44014,44023,44050,44065,44069,44084,44094,44101,44112,44124,44134,44145,44168,44174,44181,44185,44202,44236,44244,44249,44265,44274,44283,44286,44287,44288,44297,44301,44322,44331,44339,44363,44376,44382,44430,44448,44472,44479,44485,44491,44493,44508,44528,44556,44559,44563,44593,44641,44648,44685,44691,44696,44705,44722,44782,44808,44818,44828,44831,44840,44858,44866,44919,44935]
for person in people_responded:
    data.loc[data['id'] == person, 'last_donation'] = 0
    
# week 2
available_people = get_new_data(data, 14)
available_people_sorted = available_people.sort_values(['goodness'], ascending=[True])

cursup = [43,122,53,128,43,29,9,21]

cursup -= wekcon

people_called = []

for index, row in available_people_sorted.iterrows():
    bldid = bldtypdict[row['blood_group']]
    if cursup[bldid] < np.ceil(1.5 * optsup[bldid]):
        cursup[bldid] += 1

        people_called.append(row['id'])
        
write_week(2, people_called)
    
people_responded = [40442,40461,40528,40531,40542,40555,40565,40589,40596,40608,40619,40627,40653,40695,40696,40706,40719,40733,40739,40746,40751,40777,40789,40811,40817,40825,40827,40865,40880,40888,40897,40904,40905,40917,40951,40960,40995,41002,41033,41076,41117,41196,41205,41206,41219,41220,41232,41259,41303,41321,41364,41383,41387,41396,41432,41444,41447,41450,41451,41463,41497,41511,41517,41556,41580,41594,41595,41604,41632,41634,41636,41640,41649,41661,41671,41682,41683,41759,41780,41798,41817,41833,41840,41878,41889,41896,41918,41920,41940,41966,41984,41985,41992,42004,42011,42018,42056,42089,42093,42106,42110,42148,42149,42155,42196,42216,42236,42247,42268,42293,42314,42322,42324,42327,42337,42347,42362,42375,42388,42398,42410,42423,42451,42518,42519,42543,42565,42584,42586,42589,42599,42622,42663,42668,42685,42694,42705,42730,42731,42751,42772,42773,42791,42794,42844,42845,42873,42917,42919,42922,42936,42949,42956,42971,42991,42998,43038,43049,43065,43080,43114,43121,43133,43140,43141,43219,43233,43261,43274,43275,43297,43301,43313,43326,43332,43346,43358,43387,43395,43397,43399,43414,43433,43458,43489,43547,43565,43568,43584,43588,43591,43592,43610,43620,43636,43640,43643,43647,43652,43656,43660,43701,43724,43730,43761,43766,43778,43832,43838,43841,43860,43866,43916,43924,43932,43933,43999,44010,44013,44027,44039,44044,44050,44053,44093,44096,44110,44116,44131,44139,44141,44149,44166,44168,44210,44213,44218,44220,44221,44244,44248,44274,44283,44287,44300,44306,44338,44348,44387,44393,44432,44450,44475,44491,44560,44561,44566,44571,44599,44637,44639,44651,44687,44697,44731,44746,44754,44801,44836,44858,44860,44866,44886,44888,44889,44920]
for person in people_responded:
    data.loc[data['id'] == person, 'last_donation'] = 0
    
    
# week 3
available_people = get_new_data(data, 21)
available_people_sorted = available_people.sort_values(['goodness'], ascending=[True])

cursup = [50,156,55,146,54,35,13,23]

cursup -= wekcon

people_called = []

for index, row in available_people_sorted.iterrows():
    bldid = bldtypdict[row['blood_group']]
    if cursup[bldid] < np.ceil(1.5 * optsup[bldid]):
        cursup[bldid] += 1

        people_called.append(row['id'])
        
write_week(3, people_called)
    
